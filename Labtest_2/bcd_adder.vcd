$date
	Tue Feb 27 15:59:20 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_bcd_adder $end
$var wire 8 ! s [7:0] $end
$var wire 1 " cout $end
$var reg 8 # a [7:0] $end
$var reg 8 $ b [7:0] $end
$scope module uut $end
$var wire 8 % a [7:0] $end
$var wire 8 & b [7:0] $end
$var wire 5 ' y2 [4:0] $end
$var wire 5 ( y1 [4:0] $end
$var wire 8 ) s [7:0] $end
$var wire 1 " cout $end
$scope module Add1 $end
$var wire 4 * p [3:0] $end
$var wire 4 + q [3:0] $end
$var wire 5 , y [4:0] $end
$upscope $end
$scope module Add2 $end
$var wire 4 - p [3:0] $end
$var wire 4 . q [3:0] $end
$var wire 5 / y [4:0] $end
$upscope $end
$scope module BAD $end
$var wire 5 0 p [4:0] $end
$var wire 5 1 q [4:0] $end
$var wire 8 2 y [7:0] $end
$var wire 1 " cout $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1110111 2
b111 1
b111 0
b111 /
b101 .
b10 -
b111 ,
b10 +
b101 *
b1110111 )
b111 (
b111 '
b1010010 &
b100101 %
b1010010 $
b100101 #
0"
b1110111 !
$end
#100000
1"
b10000111 !
b10000111 )
b10000111 2
b10111 (
b10111 ,
b10111 1
b10111 '
b10111 /
b10111 0
b1000 +
b1000 .
b1001 *
b1001 -
b10001000 $
b10001000 &
b10011001 #
b10011001 %
#200000
b101 !
b101 )
b101 2
b10000 '
b10000 /
b10000 0
b101 (
b101 ,
b101 1
b10 +
b1 .
b11 *
b10010 $
b10010 &
b10010011 #
b10010011 %
